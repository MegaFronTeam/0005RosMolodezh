extends ../layout/main.pug

include ../blocks/headerBlock/_headerBlock.pug
include ../blocks/sForm/_sForm.pug
include ../blocks/sContent/_sContent.pug
 
include ../blocks/sContact/_sContact.pug
include ../blocks/sForm/_sForm.pug
include ../blocks/sForm/_sForm.pug
include ../blocks/sStaff/_sStaff.pug
include ../blocks/sDashboard/_sDashboard.pug
include ../blocks/sProfileNav/_sProfileNav.pug

block variables
	- let  mainPage= 'main-page' 
	- let  bg= null

block title
	- let  title= 'Дашборды'
	title= title
block pagecontent
	//- +mob-mnu()
	
	
	+parts('header')
	main
		.container
			.row.row--profile
				.col-lg-3
					+sProfileNav
				.col-lg-9
					+sDashboard
	+parts('footer')
block scripts
	script.
		document.addEventListener('DOMContentLoaded', function () {
			const fileUploads = document.querySelectorAll('.file-container--js');

			if (fileUploads.length) {
				fileUploads.forEach((element) => {
					const fileInput = element.querySelector('.file-upload');
					const fileNameElement = element.querySelector('.file-name');
					const fileInfo = element.querySelector('.file-info');
					const removeFileElement = element.querySelector('.remove-file');
					const fileLabel = element.querySelector('.file-label');

					fileInfo.style.display = 'none';
					removeFileElement.style.display = 'none';

					fileInput.addEventListener('change', () => {
						const file = fileInput.files[0];
						if (file) {
							fileNameElement.textContent = file.name;
							fileInfo.style.display = 'inline-block';
							removeFileElement.style.display = 'inline-block';
							fileLabel.style.display = 'none';
						}
					});

					removeFileElement.addEventListener('click', () => {
						fileInput.value = '';
						fileNameElement.textContent = '';
						fileInfo.style.display = 'none';
						removeFileElement.style.display = 'none';
						fileLabel.style.display = 'inline-block';
					});
				});
			}

			const labels = ['ДФО', 'ПФО', 'СЗФО', 'СКФО', 'СФО', 'УФО', 'ЦФО', 'ЮФО'];

			const data = {
				labels: labels,
				datasets: [
					{
						label: '2022',
						data: [3256889, 3256889, 3256889, 3256889, 3562998, 3256889, 3256889, 3256889],
						backgroundColor: '#9c4dcc',
					},
					{
						label: '2023',
						data: [3256889, 3256889, 3256889, 3256889, 3256889, 3256889, 3256889, 3256889],
						backgroundColor: '#a866d6',
					},
					{
						label: '2024',
						data: [3256889, 3256889, 3256889, 3256889, 3256889, 3256889, 3256889, 3256889],
						backgroundColor: '#b87de0',
					},
				],
			};

			// Плагин для подписей сверху и снизу
			const topBottomLabelsPlugin = {
				id: 'topBottomLabels',
				afterDatasetsDraw(chart) {
					const { ctx } = chart;
					chart.data.datasets.forEach((dataset, datasetIndex) => {
						const meta = chart.getDatasetMeta(datasetIndex);
						meta.data.forEach((bar, index) => {
							const value = dataset.data[index].toLocaleString('ru-RU');
							const label = dataset.label;

							// Верхняя подпись (значение)
							ctx.save();
							ctx.translate(bar.x + 3, bar.y);
							ctx.rotate(-Math.PI / 2);
							ctx.fillStyle = '#000';
							ctx.font = '300 12px sans-serif';
							// ctx.textAlign = 'дуае';
							ctx.textBaseline = 'middle';
							ctx.fillText(value, 5, 0);
							ctx.restore();

							// Нижняя подпись (год)
							ctx.save();
							ctx.translate(bar.x, bar.y + bar.height + 10);
							ctx.rotate(-Math.PI / 2);
							ctx.fillStyle = '#444';
							ctx.font = '10px sans-serif';
							ctx.textAlign = 'right';
							ctx.textBaseline = 'middle';
							ctx.fillText(label, 0, 0);
							ctx.restore();
						});
					});
				},
			};

			const allValues = data.datasets.flatMap((ds) => ds.data);
			const minValue = Math.min(...allValues);

			// Вычислим отступ, например, 5% от минимального значения
			const bottomOffset = minValue * 0.05;

			const config = {
				type: 'bar',
				data: data,
				options: {
					responsive: false,
					animation: false,
					layout: {
						padding: {
							// top: 50,
							// bottom: 110,
						},
					},
					plugins: {
						tooltip: {
							callbacks: {
								label: function (context) {
									const value = context.raw.toLocaleString('ru-RU');
									return `${context.dataset.label}: ${value} чел`;
								},
							},
						},
						// legend: false,
					},
					scales: {
						x: {
							stacked: false,
							// categoryPercentage: 0.8, // 1 = все пространство, меньше — уже группы
							// barPercentage: 1.6,
							ticks: {
								padding: 35, // ← отступ между осью и подписью
							},
						},
						y: {
							display: false, // ← отключает ось
							suggestedMin: 1000000, // опускает базу графика
							min: 0,
							stacked: false,
							grace: '50%',
							// suggestedMin: minValue - bottomOffset + 1000000,
							ticks: {
								callback: function (value) {
									return value.toLocaleString('ru-RU');
								},
							},
						},
					},
				},
				plugins: [topBottomLabelsPlugin],
			};

			new Chart(document.getElementById('myChart').getContext('2d'), config);
		});





